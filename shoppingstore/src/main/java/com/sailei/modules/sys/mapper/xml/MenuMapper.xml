<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailei.modules.sys.mapper.MenuMapper">

    <sql id="Base_Column_List">
        DISTINCT a.menu_id AS menuId,
        a.parent_id AS parentId,
        a.parent_name AS parentName,
        a.parent_ids AS parentIds,
        a.name AS name,
        a.icon AS icon,
        a.url AS url,
        a.sort AS sort,
        a.levels AS levels,
        a.menu_type AS menuType,
        a.is_show AS isShow,
        a.permission AS permission,
        a.update_time AS updateTime
    </sql>

    <!-- 根据menuId查询菜单 -->
    <select id="getById" resultType="com.sailei.modules.sys.entity.Menu">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_menu a
        WHERE a.del_flag=0 AND a.menu_id=#{menuId}
    </select>

    <!-- 根据条件查询菜单 -->
    <select id="queryPage" resultType="com.sailei.modules.sys.entity.Menu">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        sys_menu a
        WHERE a.del_flag=0
        <if test="name != null and name != ''">
            AND a.name like CONCAT('%',#{name},'%')
        </if>
        ORDER BY a.sort desc
        <if test="page !=null and page != -1 and limit != null and limit != ''">
            limit ${page},${limit}
        </if>
    </select>

    <!-- 查询拥有权限的所有的菜单 -->
    <select id="selectMenuList" resultType="com.sailei.modules.sys.entity.Menu">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        sys_menu a
        LEFT JOIN sys_role_menu b ON a.menu_id = b.menu_id
        WHERE a.del_flag=0 AND a.is_show=1
        <if test="types != null and types != ''">
            AND a.menu_type IN (${types})
        </if>
        <if test="roles != null and roles != 'admin'">
            <!-- roles传参不为空且不是admin时按照用户拥有角色查询 -->
            AND b.role_id IN (${roles})
        </if>
        <!-- roles传参为空时不返回任何菜单 -->
        <if test="roles == null or roles == ''">
            AND b.role_id = -1
        </if>
        ORDER BY a.sort desc
    </select>

    <!-- 获取所有子菜单的结构 -->
    <select id="getMenusByParentId" resultType="com.sailei.modules.sys.entity.Menu">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_menu a
        WHERE a.del_flag=0 AND (a.parent_id = #{menuId} OR a.parent_ids LIKE CONCAT('%,',#{menuId}, ',%') )
    </select>

    <!-- 根据角色查询关联菜单 -->
    <select id="getMenuIdsByRoleId" resultType="java.lang.String">
    SELECT
        DISTINCT a.menu_id
    FROM sys_menu a LEFT JOIN sys_role_menu b ON a.menu_id=b.menu_id
    WHERE a.del_flag=0 AND b.role_id=#{roleId}
    </select>

    <!-- 根据父菜单查询子菜单列表树 -->
    <select id="menuTreeListByMenuIds" resultType="com.sailei.common.base.ZTreeNode">
        SELECT
        m1.menu_id AS id,
        (CASE WHEN (m2.menu_id = 0 OR m2.menu_id IS NULL ) THEN 0 ELSE m2.menu_id END ) AS pId,
        m1. NAME AS NAME,
        (CASE WHEN ( m2.menu_id = 0 OR m2.menu_id IS NULL ) THEN 'true' ELSE 'false' END ) AS OPEN,
        (CASE WHEN ( m3.menu_id = 0 OR m3.menu_id IS NULL ) THEN 'false' ELSE 'true' END ) AS `checked`
        FROM sys_menu m1
        LEFT JOIN sys_menu m2 ON m1.parent_id = m2.menu_id
        LEFT JOIN ( SELECT menu_id FROM sys_menu WHERE menu_id IN
        <foreach collection="list" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach> ) m3 ON m1.menu_id = m3.menu_id
        WHERE m1.del_flag=0
        ORDER BY m1.menu_id ASC
    </select>
    <!-- 根据拥有权限的菜单树 -->
    <select id="menuTreeListMyAuth" resultType="com.sailei.common.base.ZTreeNode">
    SELECT
        DISTINCT m1.menu_id AS id,
        (CASE WHEN (m2.menu_id = 0 OR m2.menu_id IS NULL ) THEN 0 ELSE m2.menu_id END ) AS pId,
        m1. NAME AS NAME,
        (CASE WHEN ( m2.menu_id = 0 OR m2.menu_id IS NULL ) THEN 'true' ELSE 'false' END ) AS OPEN,
        'false' AS `checked`
    FROM sys_menu m1
    LEFT JOIN sys_menu m2 ON m1.parent_id = m2.menu_id
    LEFT JOIN sys_role_menu b ON m1.menu_id = b.menu_id
    WHERE m1.del_flag=0 AND b.role_id IN (${roles}) AND m1.menu_type in (0,1)
    ORDER BY m1.menu_id ASC
    </select>
    <!-- 根据父菜单查询子菜单列表树 -->
    <select id="menuTreeList" resultType="com.sailei.common.base.ZTreeNode">
        SELECT
        m1.MENU_ID AS id,
        (CASE WHEN (m2.MENU_ID = 0 OR m2.MENU_ID IS NULL ) THEN 0 ELSE m2.MENU_ID END ) AS pId,
        m1. NAME AS NAME,
        (CASE WHEN ( m2.MENU_ID = 0 OR m2.MENU_ID IS NULL ) THEN 'true' ELSE 'false' END ) AS OPEN
        FROM sys_menu m1
        LEFT JOIN sys_menu m2 ON m1.parent_id = m2.menu_id
        WHERE m1.del_flag=0
        ORDER BY m1.MENU_ID ASC
    </select>

    <!-- 保存记录 -->
    <insert id="saveMenu">
        INSERT INTO sys_menu(
            menu_id,
            parent_id,
            parent_name,
            parent_ids,
            name,
            icon,
            url,
            sort,
            levels,
            menu_type,
            permission,
            update_time
        ) VALUES (
            #{menuId},
            #{parentId},
            #{parentName},
            #{parentIds},
            #{name},
            #{icon},
            #{url},
            #{sort},
            #{levels},
            #{menuType},
            #{permission},
            #{updateTime}
        )
    </insert>

    <!-- 更新记录 -->
    <update id="updateMenu">
        UPDATE sys_menu SET menu_id=#{menuId}
        <if test="parentId != null and parentId != ''">
            ,parent_id=#{parentId}
        </if>
        <if test="parentName != null and parentName != ''">
            ,parent_name=#{parentName}
        </if>
        <if test="parentIds != null and parentIds != ''">
            ,parent_ids=#{parentIds}
        </if>
        <if test="name != null and name != ''">
            ,name=#{name}
        </if>
        <if test="icon != null and icon != ''">
            ,icon=#{icon}
        </if>
        <if test="url != null and url != ''">
            ,url=#{url}
        </if>
        <if test="sort != null and sort != ''">
            ,sort=#{sort}
        </if>
        <if test="levels != null and levels != ''">
            ,levels=#{levels}
        </if>
        <if test="menuType != null and menuType != '' or menuType == 0">
            ,menu_type=#{menuType}
        </if>
        <if test="isShow != null and isShow != '' or isShow==0">
            ,is_show=#{isShow}
        </if>
        <if test="permission != null and permission != ''">
            ,permission=#{permission}
        </if>
        <if test="updateTime != null">
            ,update_time=#{updateTime}
        </if>
        WHERE menu_id=#{menuId}
    </update>

    <update id="deleteById">
        UPDATE sys_menu SET del_flag=1 WHERE menu_id=#{menuId}
    </update>

</mapper>
