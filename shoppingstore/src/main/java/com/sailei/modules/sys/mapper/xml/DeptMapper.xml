<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailei.modules.sys.mapper.DeptMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        a.dept_id AS "deptId",
        a.parent_id AS "parentId",
        a.parent_ids AS "parentIds",
        a.parent_name AS "parentName",
        a.name AS "name",
        a.full_name AS "fullName",
        a.description AS "description",
        a.version AS "version",
        a.sort AS "sort",
        a.create_time AS "createTime",
        a.update_time AS "updateTime",
        a.create_user AS "createUser",
        a.update_user AS "updateUser"
    </sql>

    <!-- 根据ID查询记录 -->
    <select id="getById" resultType="com.sailei.modules.sys.entity.Dept">
        SELECT
          <include refid="Base_Column_List"/>
        FROM
        sys_dept a
        WHERE a.del_flag=0 AND a.dept_id=#{deptId}
    </select>

    <!-- 根据条件查询记录 -->
    <select id="queryPage" resultType="com.sailei.modules.sys.entity.Dept">
        SELECT
          <include refid="Base_Column_List"/>
        FROM
        sys_dept a
        WHERE a.del_flag=0
    </select>

    <!-- 查询树 -->
    <select id="tree" resultType="com.sailei.common.base.ZTreeNode">
		SELECT
            dept_id AS id,
            parent_id AS "pId",
            name AS NAME,
            ( CASE WHEN (parent_id = 0 OR parent_id IS NULL) THEN 'true' ELSE 'false' END ) AS "open"
        FROM sys_dept
        where del_flag = 0
	</select>

    <!-- 查询树节点 -->
    <select id="treeviewNodes" resultType="com.sailei.common.base.TreeviewNode">
        select dept_id AS tags, parent_id as "parentId", name as text from sys_dept WHERE del_flag=0
    </select>

    <!-- 插入记录 -->
    <insert id="saveDept">
        INSERT INTO sys_dept (
          dept_id,
          parent_id,
          parent_ids,
          parent_name,
          name,
          full_name,
          description,
          version,
          sort,
          create_time,
          update_time,
          create_user,
          update_user
        ) VALUES (
          #{deptId},
          #{parentId},
          #{parentIds},
          #{parentName},
          #{name},
          #{fullName},
          #{description},
          #{version},
          #{sort},
          #{createTime},
          #{updateTime},
          #{createUser},
          #{updateUser}
        )
    </insert>

    <!-- 插入记录 -->
    <update id="updateById">
        UPDATE sys_dept SET dept_id=#{deptId}
        <if test="parentId != null and parentId != ''">
            ,parent_id=#{parentId}
        </if>
        <if test="parentIds != null and parentIds != ''">
            ,parent_ids=#{parentIds}
        </if>
        <if test="parentName != null and parentName != ''">
            ,parent_name=#{parentName}
        </if>
        <if test="name != null and name != ''">
            ,name=#{name}
        </if>
        <if test="fullName != null and fullName != ''">
            ,full_name=#{fullName}
        </if>
        <if test="description != null and description != ''">
            ,description=#{description}
        </if>
        <if test="version != null and version != ''">
            ,version=#{version}
        </if>
        <if test="sort != null and sort != '' or sort==0">
            ,sort=#{sort}
        </if>
        <if test="updateTime != null ">
            ,update_time=#{updateTime}
        </if>
        <if test="updateUser != null and updateUser != ''">
            ,update_user=#{updateUser}
        </if>
        WHERE dept_id=#{deptId}
    </update>

    <update id="removeById">
        update sys_dept SET del_flag=1 WHERE dept_id=#{deptId} or parent_ids like concat('%',#{deptId},'%')
    </update>

</mapper>
