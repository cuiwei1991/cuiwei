<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailei.modules.gen.mapper.GenSchemeMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        a.id as id,
        a.category as category,
        a.project_path as projectPath,
        a.package_name as packageName,
        a.module_name as moduleName,
        a.sub_module_name as subModuleName,
        a.function_name as functionName,
        a.function_name_simple as functionNameSimple,
        a.function_author as functionAuthor,
        a.gen_table_id as genTableId,
        a.create_by as createBy,
        a.create_date as createDate,
        a.update_by as updateBy,
        a.update_date as updateDate,
        a.remarks as remarks,
        a.del_flag as delFlag
    </sql>

    <!-- 根据记录ID获取记录 -->
    <select id="getById" resultType="com.sailei.modules.gen.entity.GenTable">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gen_table a WHERE a.id=#{id}
    </select>

    <!-- 根据条件获取记录列表 -->
    <select id="queryPage" resultType="com.sailei.modules.gen.entity.GenScheme">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gen_scheme a
        <if test="name != null">
            WHERE a.name LIKE CONCAT('%',#{name},'%')
        </if>
        ORDER BY a.update_date DESC
    </select>

    <!-- 根据条件获取记录列表条数 -->
    <select id="queryCount" resultType="java.lang.Long">
        SELECT
        COUNT(1)
        FROM gen_table a
        <if test="name != null">
            WHERE a.name LIKE CONCAT('%',#{name},'%')
        </if>
    </select>

    <!--修改记录-->
    <update id="update">
        UPDATE gen_scheme SET
        category = #{category},
        project_path = #{projectPath},
        package_name = #{packageName},
        module_name = #{moduleName},
        sub_module_name = #{subModuleName},
        function_name = #{functionName},
        function_name_simple = #{functionNameSimple},
        function_author = #{functionAuthor},
        update_by = #{updateBy},
        update_date = #{updateDate}
        WHERE id = #{id}
    </update>

    <!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
    <select id="getByGenTableId" resultType="com.sailei.modules.gen.entity.GenScheme">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gen_scheme a
        where gen_table_id = #{genTableId}
    </select>

    <insert id="insert">
        INSERT INTO gen_scheme(
        id,
        category,
        project_path,
        package_name,
        module_name,
        sub_module_name,
        function_name,
        function_name_simple,
        function_author,
        gen_table_id,
        create_by,
        create_date,
        update_by,
        update_date,
        remarks
        ) VALUES (
        #{id},
        #{category},
        #{projectPath},
        #{packageName},
        #{moduleName},
        #{subModuleName},
        #{functionName},
        #{functionNameSimple},
        #{functionAuthor},
        #{genTable.id},
        #{createBy},
        #{createDate},
        #{updateBy},
        #{updateDate},
        #{remarks}
        )
    </insert>
</mapper>
